[uwsgi]
strict = true
master = true
enable-threads = true
vacuum = true                          ; Delete sockets during shutdown
single-interpreter = true
die-on-term = true                     ; Shutdown when receiving SIGTERM (default is respawn)
need-app = true
lazy-apps = true                       ; spawn app in uwsgi workers so sqlalchemy engines are unique


module = jobmon.server.web.main
callable = app
auto-procname = true
procname-prefix = "jobmon "


disable-logging = true
log-4xx = true
log-5xx = true


harakiri = 300                       ; How long to wait for a single request before killing
http-timeout = 300


max-requests = 5000                  ; Restart workers after this many requests
max-worker-lifetime = 3600           ; Restart workers after this many seconds
worker-reload-mercy = 60             ; How long to wait before forcefully killing workers


cheaper-algo = busyness
workers = 10
cheaper = 3
cheaper-initial = 2                  ; Workers created at startup
cheaper-overload = 1                 ; Length of a cycle in seconds
cheaper-step = 1                     ; How many workers to spawn at a time
cheaper-busyness-multiplier = 30     ; How many cycles to wait before killing workers
cheaper-busyness-min = 20            ; Below this threshold, kill workers (if stable for multiplier cycles)
cheaper-busyness-max = 70            ; Above this threshold, spawn new workers
cheaper-busyness-backlog-alert = 16  ; Spawn emergency workers if more than this many requests are waiting in the queue
cheaper-busyness-backlog-step = 2    ; How many emergency workers to create if there are too many requests in the queue
